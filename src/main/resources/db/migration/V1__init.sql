CREATE TYPE system_role AS ENUM ('ADMIN', 'MODERATOR', 'USER');

CREATE TYPE project_role AS ENUM ('OWNER', 'MEMBER');

CREATE TYPE task_type AS ENUM (
  'MIPO', 'MRPO', 'MIT', 'MRT', 'TGD', 'RGD', 'MGD', 'TPD', 'STD', 'SCD', 'RD',
  'US', 'RPD', 'SWD', 'UCD', 'AD', 'UCDS', 'SQ', 'SD', 'DBD', 'ER', 'DD', 'PN',
  'CHECK', 'SRSD', 'VCD', 'UXI', 'SMD', 'FMD', 'SDW', 'TRT', 'POT', 'ETC', 'MFT', 'NWA'
);

CREATE TYPE task_status AS ENUM (
  'TODO', 'IN_PROGRESS', 'REVIEW', 'DONE', 'LATE', 'BLOCKED', 'REVISE', 'CANCELED'
);

CREATE TYPE task_priorities AS ENUM ('LOW', 'MEDIUM', 'HIGH');

CREATE TABLE cycles
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    project_id  BIGINT                                  NOT NULL,
    cycle_count INTEGER                                 NOT NULL,
    start_date  date,
    end_date    date,
    created_at  TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    updated_at  TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    CONSTRAINT pk_cycles PRIMARY KEY (id)
);

CREATE TABLE project_members
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    project_id BIGINT                                  NOT NULL,
    user_id    BIGINT                                  NOT NULL,
    role       project_role                            NOT NULL,
    added_at   TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    CONSTRAINT pk_project_members PRIMARY KEY (id)
);

CREATE TABLE projects
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    key         VARCHAR(24)                             NOT NULL,
    name        VARCHAR(200)                            NOT NULL,
    description TEXT,
    created_by  BIGINT                                  NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    updated_at  TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    deleted_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_projects PRIMARY KEY (id)
);

CREATE TABLE sprints
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cycle_id     BIGINT                                  NOT NULL,
    sprint_count INTEGER                                 NOT NULL,
    start_date   date,
    end_date     date,
    created_at   TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    updated_at   TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    CONSTRAINT pk_sprints PRIMARY KEY (id)
);

CREATE TABLE task_activity
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    task_id     BIGINT                                  NOT NULL,
    actor_id    BIGINT                                  NOT NULL,
    from_status task_status,
    to_status   task_status,
    occurred_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_task_activity PRIMARY KEY (id)
);

CREATE TABLE tasks
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    project_id      BIGINT                                  NOT NULL,
    cycle_id        BIGINT,
    sprint_id       BIGINT,
    key             VARCHAR(32)                             NOT NULL,
    title           VARCHAR(300)                            NOT NULL,
    description     TEXT,
    type            task_type                               NOT NULL,
    status          task_status                             NOT NULL,
    priorities      task_priorities                         NOT NULL,
    estimate_points INTEGER,
    actual_points   INTEGER,
    start_date      date,
    due_date        date,
    finished_at     TIMESTAMP WITHOUT TIME ZONE,
    assigned_to     BIGINT,
    audited_by      BIGINT,
    created_by      BIGINT                                  NOT NULL,
    updated_by      BIGINT,
    created_at      TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    updated_at      TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    CONSTRAINT pk_tasks PRIMARY KEY (id)
);

CREATE TABLE users
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email         VARCHAR(255)                            NOT NULL,
    password      VARCHAR(255)                            NOT NULL,
    display_name  VARCHAR(120)                            NOT NULL,
    role          system_role                             NOT NULL,
    is_active     BOOLEAN                                 NOT NULL DEFAULT true,
    last_login_at TIMESTAMP WITHOUT TIME ZONE,
    created_at    TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    updated_at    TIMESTAMP WITHOUT TIME ZONE DEFAULT now(),
    deleted_at    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE project_members
    ADD CONSTRAINT uc_project_member_unique UNIQUE (project_id, user_id);

ALTER TABLE cycles
    ADD CONSTRAINT uc_project_cycle_unique UNIQUE (project_id, cycle_count);

ALTER TABLE tasks
    ADD CONSTRAINT uc_project_key_unique UNIQUE (project_id, key);

ALTER TABLE sprints
    ADD CONSTRAINT uc_cycle_sprint_unique UNIQUE (cycle_id, sprint_count);

ALTER TABLE projects
    ADD CONSTRAINT uc_projects_key UNIQUE (key);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

CREATE INDEX idx_projects_deleted ON projects (deleted_at);

CREATE INDEX idx_projects_key ON projects (key);

CREATE INDEX idx_sprint_end_date ON sprints (end_date);

CREATE INDEX idx_sprint_start_date ON sprints (start_date);

CREATE INDEX idx_task_activity_time ON task_activity (task_id, occurred_at);

CREATE INDEX idx_tasks_sprint_status ON tasks (sprint_id, status);

CREATE INDEX idx_tasks_status ON tasks (status);

CREATE INDEX idx_users_deleted ON users (deleted_at);

CREATE INDEX idx_users_email ON users (email);

ALTER TABLE cycles
    ADD CONSTRAINT FK_CYCLES_ON_PROJECT FOREIGN KEY (project_id) REFERENCES projects (id) ON DELETE CASCADE ;

ALTER TABLE projects
    ADD CONSTRAINT FK_PROJECTS_ON_CREATED_BY FOREIGN KEY (created_by) REFERENCES users (id);

ALTER TABLE project_members
    ADD CONSTRAINT FK_PROJECT_MEMBERS_ON_PROJECT FOREIGN KEY (project_id) REFERENCES projects (id) ON DELETE CASCADE;

ALTER TABLE project_members
    ADD CONSTRAINT FK_PROJECT_MEMBERS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE sprints
    ADD CONSTRAINT FK_SPRINTS_ON_CYCLE FOREIGN KEY (cycle_id) REFERENCES cycles (id) ON DELETE CASCADE ;

ALTER TABLE tasks
    ADD CONSTRAINT FK_TASKS_ON_ASSIGNED_TO FOREIGN KEY (assigned_to) REFERENCES users (id);

ALTER TABLE tasks
    ADD CONSTRAINT FK_TASKS_ON_AUDITED_BY FOREIGN KEY (audited_by) REFERENCES users (id);

ALTER TABLE tasks
    ADD CONSTRAINT FK_TASKS_ON_CREATED_BY FOREIGN KEY (created_by) REFERENCES users (id);

ALTER TABLE tasks
    ADD CONSTRAINT FK_TASKS_ON_CYCLE FOREIGN KEY (cycle_id) REFERENCES cycles (id);

ALTER TABLE tasks
    ADD CONSTRAINT FK_TASKS_ON_PROJECT FOREIGN KEY (project_id) REFERENCES projects (id) ON DELETE CASCADE;

ALTER TABLE tasks
    ADD CONSTRAINT FK_TASKS_ON_SPRINT FOREIGN KEY (sprint_id) REFERENCES sprints (id);

ALTER TABLE tasks
    ADD CONSTRAINT FK_TASKS_ON_UPDATED_BY FOREIGN KEY (updated_by) REFERENCES users (id);

ALTER TABLE task_activity
    ADD CONSTRAINT FK_TASK_ACTIVITY_ON_ACTOR FOREIGN KEY (actor_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE task_activity
    ADD CONSTRAINT FK_TASK_ACTIVITY_ON_TASK FOREIGN KEY (task_id) REFERENCES tasks (id);